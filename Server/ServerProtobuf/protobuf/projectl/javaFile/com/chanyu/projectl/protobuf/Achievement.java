// Generated by the protocol buffer compiler.  DO NOT EDIT!

package com.chanyu.projectl.protobuf;

public final class Achievement {
  private Achievement() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public static final class AchievementItemProto extends
      com.google.protobuf.GeneratedMessage {
    // Use AchievementItemProto.newBuilder() to construct.
    private AchievementItemProto() {}
    
    private static final AchievementItemProto defaultInstance = new AchievementItemProto();
    public static AchievementItemProto getDefaultInstance() {
      return defaultInstance;
    }
    
    public AchievementItemProto getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.chanyu.projectl.protobuf.Achievement.internal_static_chanyu_AchievementItemProto_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.chanyu.projectl.protobuf.Achievement.internal_static_chanyu_AchievementItemProto_fieldAccessorTable;
    }
    
    // required int32 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private boolean hasId;
    private int id_ = 0;
    public boolean hasId() { return hasId; }
    public int getId() { return id_; }
    
    // required double currentNum = 2;
    public static final int CURRENTNUM_FIELD_NUMBER = 2;
    private boolean hasCurrentNum;
    private double currentNum_ = 0D;
    public boolean hasCurrentNum() { return hasCurrentNum; }
    public double getCurrentNum() { return currentNum_; }
    
    // required bool achieved = 3;
    public static final int ACHIEVED_FIELD_NUMBER = 3;
    private boolean hasAchieved;
    private boolean achieved_ = false;
    public boolean hasAchieved() { return hasAchieved; }
    public boolean getAchieved() { return achieved_; }
    
    // required bool gotten = 4;
    public static final int GOTTEN_FIELD_NUMBER = 4;
    private boolean hasGotten;
    private boolean gotten_ = false;
    public boolean hasGotten() { return hasGotten; }
    public boolean getGotten() { return gotten_; }
    
    // optional string currentNumBig = 5;
    public static final int CURRENTNUMBIG_FIELD_NUMBER = 5;
    private boolean hasCurrentNumBig;
    private java.lang.String currentNumBig_ = "";
    public boolean hasCurrentNumBig() { return hasCurrentNumBig; }
    public java.lang.String getCurrentNumBig() { return currentNumBig_; }
    
    public final boolean isInitialized() {
      if (!hasId) return false;
      if (!hasCurrentNum) return false;
      if (!hasAchieved) return false;
      if (!hasGotten) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hasId()) {
        output.writeInt32(1, getId());
      }
      if (hasCurrentNum()) {
        output.writeDouble(2, getCurrentNum());
      }
      if (hasAchieved()) {
        output.writeBool(3, getAchieved());
      }
      if (hasGotten()) {
        output.writeBool(4, getGotten());
      }
      if (hasCurrentNumBig()) {
        output.writeString(5, getCurrentNumBig());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, getId());
      }
      if (hasCurrentNum()) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, getCurrentNum());
      }
      if (hasAchieved()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, getAchieved());
      }
      if (hasGotten()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, getGotten());
      }
      if (hasCurrentNumBig()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(5, getCurrentNumBig());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.chanyu.projectl.protobuf.Achievement.AchievementItemProto parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.chanyu.projectl.protobuf.Achievement.AchievementItemProto parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.chanyu.projectl.protobuf.Achievement.AchievementItemProto parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.chanyu.projectl.protobuf.Achievement.AchievementItemProto parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.chanyu.projectl.protobuf.Achievement.AchievementItemProto parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.chanyu.projectl.protobuf.Achievement.AchievementItemProto parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.chanyu.projectl.protobuf.Achievement.AchievementItemProto parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input).buildParsed();
    }
    public static com.chanyu.projectl.protobuf.Achievement.AchievementItemProto parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.chanyu.projectl.protobuf.Achievement.AchievementItemProto parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.chanyu.projectl.protobuf.Achievement.AchievementItemProto parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.chanyu.projectl.protobuf.Achievement.AchievementItemProto prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.chanyu.projectl.protobuf.Achievement.AchievementItemProto result;
      
      // Construct using com.chanyu.projectl.protobuf.Achievement.AchievementItemProto.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.chanyu.projectl.protobuf.Achievement.AchievementItemProto();
        return builder;
      }
      
      protected com.chanyu.projectl.protobuf.Achievement.AchievementItemProto internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.chanyu.projectl.protobuf.Achievement.AchievementItemProto();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.chanyu.projectl.protobuf.Achievement.AchievementItemProto.getDescriptor();
      }
      
      public com.chanyu.projectl.protobuf.Achievement.AchievementItemProto getDefaultInstanceForType() {
        return com.chanyu.projectl.protobuf.Achievement.AchievementItemProto.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.chanyu.projectl.protobuf.Achievement.AchievementItemProto build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.chanyu.projectl.protobuf.Achievement.AchievementItemProto buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.chanyu.projectl.protobuf.Achievement.AchievementItemProto buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.chanyu.projectl.protobuf.Achievement.AchievementItemProto returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.chanyu.projectl.protobuf.Achievement.AchievementItemProto) {
          return mergeFrom((com.chanyu.projectl.protobuf.Achievement.AchievementItemProto)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.chanyu.projectl.protobuf.Achievement.AchievementItemProto other) {
        if (other == com.chanyu.projectl.protobuf.Achievement.AchievementItemProto.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasCurrentNum()) {
          setCurrentNum(other.getCurrentNum());
        }
        if (other.hasAchieved()) {
          setAchieved(other.getAchieved());
        }
        if (other.hasGotten()) {
          setGotten(other.getGotten());
        }
        if (other.hasCurrentNumBig()) {
          setCurrentNumBig(other.getCurrentNumBig());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setId(input.readInt32());
              break;
            }
            case 17: {
              setCurrentNum(input.readDouble());
              break;
            }
            case 24: {
              setAchieved(input.readBool());
              break;
            }
            case 32: {
              setGotten(input.readBool());
              break;
            }
            case 42: {
              setCurrentNumBig(input.readString());
              break;
            }
          }
        }
      }
      
      
      // required int32 id = 1;
      public boolean hasId() {
        return result.hasId();
      }
      public int getId() {
        return result.getId();
      }
      public Builder setId(int value) {
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder clearId() {
        result.hasId = false;
        result.id_ = 0;
        return this;
      }
      
      // required double currentNum = 2;
      public boolean hasCurrentNum() {
        return result.hasCurrentNum();
      }
      public double getCurrentNum() {
        return result.getCurrentNum();
      }
      public Builder setCurrentNum(double value) {
        result.hasCurrentNum = true;
        result.currentNum_ = value;
        return this;
      }
      public Builder clearCurrentNum() {
        result.hasCurrentNum = false;
        result.currentNum_ = 0D;
        return this;
      }
      
      // required bool achieved = 3;
      public boolean hasAchieved() {
        return result.hasAchieved();
      }
      public boolean getAchieved() {
        return result.getAchieved();
      }
      public Builder setAchieved(boolean value) {
        result.hasAchieved = true;
        result.achieved_ = value;
        return this;
      }
      public Builder clearAchieved() {
        result.hasAchieved = false;
        result.achieved_ = false;
        return this;
      }
      
      // required bool gotten = 4;
      public boolean hasGotten() {
        return result.hasGotten();
      }
      public boolean getGotten() {
        return result.getGotten();
      }
      public Builder setGotten(boolean value) {
        result.hasGotten = true;
        result.gotten_ = value;
        return this;
      }
      public Builder clearGotten() {
        result.hasGotten = false;
        result.gotten_ = false;
        return this;
      }
      
      // optional string currentNumBig = 5;
      public boolean hasCurrentNumBig() {
        return result.hasCurrentNumBig();
      }
      public java.lang.String getCurrentNumBig() {
        return result.getCurrentNumBig();
      }
      public Builder setCurrentNumBig(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasCurrentNumBig = true;
        result.currentNumBig_ = value;
        return this;
      }
      public Builder clearCurrentNumBig() {
        result.hasCurrentNumBig = false;
        result.currentNumBig_ = getDefaultInstance().getCurrentNumBig();
        return this;
      }
    }
    
    static {
      com.chanyu.projectl.protobuf.Achievement.getDescriptor();
    }
    
    static {
      com.chanyu.projectl.protobuf.Achievement.internalForceInit();
    }
  }
  
  public static final class AchievGetRewardResponseProto extends
      com.google.protobuf.GeneratedMessage {
    // Use AchievGetRewardResponseProto.newBuilder() to construct.
    private AchievGetRewardResponseProto() {}
    
    private static final AchievGetRewardResponseProto defaultInstance = new AchievGetRewardResponseProto();
    public static AchievGetRewardResponseProto getDefaultInstance() {
      return defaultInstance;
    }
    
    public AchievGetRewardResponseProto getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.chanyu.projectl.protobuf.Achievement.internal_static_chanyu_AchievGetRewardResponseProto_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.chanyu.projectl.protobuf.Achievement.internal_static_chanyu_AchievGetRewardResponseProto_fieldAccessorTable;
    }
    
    // required int32 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private boolean hasId;
    private int id_ = 0;
    public boolean hasId() { return hasId; }
    public int getId() { return id_; }
    
    // required .chanyu.AchievementItemProto nextAchievement = 2;
    public static final int NEXTACHIEVEMENT_FIELD_NUMBER = 2;
    private boolean hasNextAchievement;
    private com.chanyu.projectl.protobuf.Achievement.AchievementItemProto nextAchievement_ = com.chanyu.projectl.protobuf.Achievement.AchievementItemProto.getDefaultInstance();
    public boolean hasNextAchievement() { return hasNextAchievement; }
    public com.chanyu.projectl.protobuf.Achievement.AchievementItemProto getNextAchievement() { return nextAchievement_; }
    
    // required int32 result = 3;
    public static final int RESULT_FIELD_NUMBER = 3;
    private boolean hasResult;
    private int result_ = 0;
    public boolean hasResult() { return hasResult; }
    public int getResult() { return result_; }
    
    public final boolean isInitialized() {
      if (!hasId) return false;
      if (!hasNextAchievement) return false;
      if (!hasResult) return false;
      if (!getNextAchievement().isInitialized()) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hasId()) {
        output.writeInt32(1, getId());
      }
      if (hasNextAchievement()) {
        output.writeMessage(2, getNextAchievement());
      }
      if (hasResult()) {
        output.writeInt32(3, getResult());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, getId());
      }
      if (hasNextAchievement()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getNextAchievement());
      }
      if (hasResult()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, getResult());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.chanyu.projectl.protobuf.Achievement.AchievGetRewardResponseProto parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.chanyu.projectl.protobuf.Achievement.AchievGetRewardResponseProto parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.chanyu.projectl.protobuf.Achievement.AchievGetRewardResponseProto parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.chanyu.projectl.protobuf.Achievement.AchievGetRewardResponseProto parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.chanyu.projectl.protobuf.Achievement.AchievGetRewardResponseProto parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.chanyu.projectl.protobuf.Achievement.AchievGetRewardResponseProto parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.chanyu.projectl.protobuf.Achievement.AchievGetRewardResponseProto parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input).buildParsed();
    }
    public static com.chanyu.projectl.protobuf.Achievement.AchievGetRewardResponseProto parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.chanyu.projectl.protobuf.Achievement.AchievGetRewardResponseProto parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.chanyu.projectl.protobuf.Achievement.AchievGetRewardResponseProto parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.chanyu.projectl.protobuf.Achievement.AchievGetRewardResponseProto prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.chanyu.projectl.protobuf.Achievement.AchievGetRewardResponseProto result;
      
      // Construct using com.chanyu.projectl.protobuf.Achievement.AchievGetRewardResponseProto.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.chanyu.projectl.protobuf.Achievement.AchievGetRewardResponseProto();
        return builder;
      }
      
      protected com.chanyu.projectl.protobuf.Achievement.AchievGetRewardResponseProto internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.chanyu.projectl.protobuf.Achievement.AchievGetRewardResponseProto();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.chanyu.projectl.protobuf.Achievement.AchievGetRewardResponseProto.getDescriptor();
      }
      
      public com.chanyu.projectl.protobuf.Achievement.AchievGetRewardResponseProto getDefaultInstanceForType() {
        return com.chanyu.projectl.protobuf.Achievement.AchievGetRewardResponseProto.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.chanyu.projectl.protobuf.Achievement.AchievGetRewardResponseProto build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.chanyu.projectl.protobuf.Achievement.AchievGetRewardResponseProto buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.chanyu.projectl.protobuf.Achievement.AchievGetRewardResponseProto buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.chanyu.projectl.protobuf.Achievement.AchievGetRewardResponseProto returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.chanyu.projectl.protobuf.Achievement.AchievGetRewardResponseProto) {
          return mergeFrom((com.chanyu.projectl.protobuf.Achievement.AchievGetRewardResponseProto)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.chanyu.projectl.protobuf.Achievement.AchievGetRewardResponseProto other) {
        if (other == com.chanyu.projectl.protobuf.Achievement.AchievGetRewardResponseProto.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasNextAchievement()) {
          mergeNextAchievement(other.getNextAchievement());
        }
        if (other.hasResult()) {
          setResult(other.getResult());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setId(input.readInt32());
              break;
            }
            case 18: {
              com.chanyu.projectl.protobuf.Achievement.AchievementItemProto.Builder subBuilder = com.chanyu.projectl.protobuf.Achievement.AchievementItemProto.newBuilder();
              if (hasNextAchievement()) {
                subBuilder.mergeFrom(getNextAchievement());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setNextAchievement(subBuilder.buildPartial());
              break;
            }
            case 24: {
              setResult(input.readInt32());
              break;
            }
          }
        }
      }
      
      
      // required int32 id = 1;
      public boolean hasId() {
        return result.hasId();
      }
      public int getId() {
        return result.getId();
      }
      public Builder setId(int value) {
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder clearId() {
        result.hasId = false;
        result.id_ = 0;
        return this;
      }
      
      // required .chanyu.AchievementItemProto nextAchievement = 2;
      public boolean hasNextAchievement() {
        return result.hasNextAchievement();
      }
      public com.chanyu.projectl.protobuf.Achievement.AchievementItemProto getNextAchievement() {
        return result.getNextAchievement();
      }
      public Builder setNextAchievement(com.chanyu.projectl.protobuf.Achievement.AchievementItemProto value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasNextAchievement = true;
        result.nextAchievement_ = value;
        return this;
      }
      public Builder setNextAchievement(com.chanyu.projectl.protobuf.Achievement.AchievementItemProto.Builder builderForValue) {
        result.hasNextAchievement = true;
        result.nextAchievement_ = builderForValue.build();
        return this;
      }
      public Builder mergeNextAchievement(com.chanyu.projectl.protobuf.Achievement.AchievementItemProto value) {
        if (result.hasNextAchievement() &&
            result.nextAchievement_ != com.chanyu.projectl.protobuf.Achievement.AchievementItemProto.getDefaultInstance()) {
          result.nextAchievement_ =
            com.chanyu.projectl.protobuf.Achievement.AchievementItemProto.newBuilder(result.nextAchievement_).mergeFrom(value).buildPartial();
        } else {
          result.nextAchievement_ = value;
        }
        result.hasNextAchievement = true;
        return this;
      }
      public Builder clearNextAchievement() {
        result.hasNextAchievement = false;
        result.nextAchievement_ = com.chanyu.projectl.protobuf.Achievement.AchievementItemProto.getDefaultInstance();
        return this;
      }
      
      // required int32 result = 3;
      public boolean hasResult() {
        return result.hasResult();
      }
      public int getResult() {
        return result.getResult();
      }
      public Builder setResult(int value) {
        result.hasResult = true;
        result.result_ = value;
        return this;
      }
      public Builder clearResult() {
        result.hasResult = false;
        result.result_ = 0;
        return this;
      }
    }
    
    static {
      com.chanyu.projectl.protobuf.Achievement.getDescriptor();
    }
    
    static {
      com.chanyu.projectl.protobuf.Achievement.internalForceInit();
    }
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_chanyu_AchievementItemProto_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_chanyu_AchievementItemProto_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_chanyu_AchievGetRewardResponseProto_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_chanyu_AchievGetRewardResponseProto_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\021Achievement.proto\022\006chanyu\"o\n\024Achieveme" +
      "ntItemProto\022\n\n\002id\030\001 \002(\005\022\022\n\ncurrentNum\030\002 " +
      "\002(\001\022\020\n\010achieved\030\003 \002(\010\022\016\n\006gotten\030\004 \002(\010\022\025\n" +
      "\rcurrentNumBig\030\005 \001(\t\"q\n\034AchievGetRewardR" +
      "esponseProto\022\n\n\002id\030\001 \002(\005\0225\n\017nextAchievem" +
      "ent\030\002 \002(\0132\034.chanyu.AchievementItemProto\022" +
      "\016\n\006result\030\003 \002(\005B \n\034com.chanyu.projectl.p" +
      "rotobufH\001"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_chanyu_AchievementItemProto_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_chanyu_AchievementItemProto_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_chanyu_AchievementItemProto_descriptor,
              new java.lang.String[] { "Id", "CurrentNum", "Achieved", "Gotten", "CurrentNumBig", },
              com.chanyu.projectl.protobuf.Achievement.AchievementItemProto.class,
              com.chanyu.projectl.protobuf.Achievement.AchievementItemProto.Builder.class);
          internal_static_chanyu_AchievGetRewardResponseProto_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_chanyu_AchievGetRewardResponseProto_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_chanyu_AchievGetRewardResponseProto_descriptor,
              new java.lang.String[] { "Id", "NextAchievement", "Result", },
              com.chanyu.projectl.protobuf.Achievement.AchievGetRewardResponseProto.class,
              com.chanyu.projectl.protobuf.Achievement.AchievGetRewardResponseProto.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  public static void internalForceInit() {}
}
